{"version":3,"sources":["./src/ui/Triggers/Triggers.ts","./sass/_Triggers.scss"],"names":[],"mappings":"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","file":"Triggers__f1461ced9ae352f03031.js","sourcesContent":["import { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { Assert } from '../../misc/Assert';\nimport { QueryEvents, IQuerySuccessEventArgs } from '../../events/QueryEvents';\nimport { ITriggerNotify, ITriggerExecute, ITriggerRedirect, ITriggerQuery, ITrigger } from '../../rest/Trigger';\nimport { $$ } from '../../utils/Dom';\nimport {\n  IAnalyticsTriggerNotify,\n  analyticsActionCauseList,\n  IAnalyticsTriggerRedirect,\n  IAnalyticsTriggerQuery,\n  IAnalyticsTriggerExecute\n} from '../Analytics/AnalyticsActionListMeta';\nimport { QueryStateModel } from '../../models/QueryStateModel';\nimport { Initialization } from '../Base/Initialization';\nimport { object, map } from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\n\nimport 'styling/_Triggers';\nimport { IQuery } from '../../rest/Query';\nimport { Utils } from '../../UtilsModules';\n\nexport interface ITriggersOptions {}\n\nfunction isTriggerNotify(trigger: ITrigger<any>): trigger is ITriggerNotify {\n  return trigger.type === 'notify';\n}\n\nfunction isTriggerRedirect(trigger: ITrigger<any>): trigger is ITriggerRedirect {\n  return trigger.type === 'redirect';\n}\n\nfunction isTriggerQuery(trigger: ITrigger<any>): trigger is ITriggerQuery {\n  return trigger.type === 'query';\n}\n\nfunction isTriggerExecute(trigger: ITrigger<any>): trigger is ITriggerExecute {\n  return trigger.type === 'execute';\n}\n\n/**\n * The Triggers component enables the use of triggers (`notify`, `execute`, `query`, `redirect`) generated by the Coveo\n * Search API (see [Trigger](https://docs.coveo.com/en/1458/)) in the query pipeline (see\n * [Managing the Query Pipeline](https://docs.coveo.com/en/1450/)).\n *\n * Note: adding the Triggers component gives query pipeline administrators the power to influence users' search experience.\n * Bad actors will be able to perform XSS attacks, or redirect users to dangerous sites. Make sure only individuals you trust\n * have query pipeline edit privileges.\n */\nexport class Triggers extends Component {\n  static ID = 'Triggers';\n  static options: ITriggersOptions = {};\n\n  static doExport = () => {\n    exportGlobally({\n      Triggers: Triggers\n    });\n  };\n\n  /**\n   * The list of notifications returned by the Search API for the current query (via `notify` triggers).\n   *\n   * The Triggers component automatically renders this list visually.\n   */\n  public notifications: string[];\n\n  /**\n   * Creates a new Triggers component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the Triggers component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param _window The window on which to execute the triggers.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: ITriggersOptions,\n    public bindings?: IComponentBindings,\n    public _window?: Window\n  ) {\n    super(element, Triggers.ID, bindings);\n\n    this._window = this._window || window;\n    this.options = ComponentOptions.initComponentOptions(element, Triggers, options);\n    Assert.exists(element);\n    Assert.exists(this.options);\n\n    this.notifications = [];\n\n    this.bind.onRootElement(QueryEvents.querySuccess, this.handleProcessNewQueryResults);\n  }\n\n  private handleProcessNewQueryResults(data: IQuerySuccessEventArgs) {\n    Assert.exists(data);\n    Assert.exists(data.results);\n\n    $$(this.element).empty();\n    this.notifications = [];\n\n    if (Utils.isNullOrUndefined(data.results.triggers)) {\n      $$(this.element).removeClass('coveo-visible');\n      return;\n    }\n\n    const notifyTriggers: ITriggerNotify[] = [];\n    let redirectTrigger: ITriggerRedirect | null = null;\n    let queryTrigger: ITriggerQuery | null = null;\n    let executeTrigger: ITriggerExecute | null = null;\n    data.results.triggers.forEach(trigger => {\n      if (isTriggerNotify(trigger)) {\n        notifyTriggers.push(trigger);\n      } else if (isTriggerRedirect(trigger)) {\n        redirectTrigger = redirectTrigger || trigger;\n      } else if (isTriggerQuery(trigger)) {\n        queryTrigger = queryTrigger || trigger;\n      } else if (isTriggerExecute(trigger)) {\n        executeTrigger = executeTrigger || trigger;\n      }\n    });\n\n    if (notifyTriggers.length) {\n      this.processNotifyTriggers(notifyTriggers);\n      $$(this.element).addClass('coveo-visible');\n    }\n    redirectTrigger && this.processRedirectTrigger(redirectTrigger);\n    queryTrigger && this.processQueryTrigger(queryTrigger);\n    executeTrigger && this.processExecuteTrigger(executeTrigger, data.query);\n  }\n\n  private processNotifyTriggers(triggers: ITriggerNotify[]) {\n    this.usageAnalytics.logCustomEvent<IAnalyticsTriggerNotify>(\n      analyticsActionCauseList.triggerNotify,\n      {\n        notifications: triggers.map(trigger => trigger.content)\n      },\n      this.element\n    );\n\n    triggers.forEach(trigger => {\n      this.notifications.push(trigger.content);\n      this.element.appendChild($$('div', { className: 'coveo-trigger-notify' }, trigger.content).el);\n    });\n  }\n\n  private processRedirectTrigger(trigger: ITriggerRedirect) {\n    this.usageAnalytics.logCustomEvent<IAnalyticsTriggerRedirect>(\n      analyticsActionCauseList.triggerRedirect,\n      {\n        redirectedTo: trigger.content\n      },\n      this.element\n    );\n\n    this._window.location.replace(trigger.content);\n  }\n\n  private processQueryTrigger(trigger: ITriggerQuery) {\n    this.queryStateModel.set(QueryStateModel.attributesEnum.q, trigger.content);\n    this.queryController.executeQuery({\n      beforeExecuteQuery: () => {\n        this.usageAnalytics.logCustomEvent<IAnalyticsTriggerQuery>(\n          analyticsActionCauseList.triggerQuery,\n          {\n            query: trigger.content\n          },\n          this.element\n        );\n      }\n    });\n  }\n\n  private processExecuteTrigger(trigger: ITriggerExecute, query: IQuery) {\n    try {\n      let func: Function = this._window['' + trigger.content.name];\n      if (typeof func === 'function') {\n        let params = object(\n          map(trigger.content.params, (value, index) => {\n            return ['param' + (index + 1), value];\n          })\n        );\n        params['element'] = this.element;\n\n        this.usageAnalytics.logCustomEvent<IAnalyticsTriggerExecute>(\n          analyticsActionCauseList.triggerExecute,\n          {\n            executions: [{ functionName: trigger.content.name, params: trigger.content.params }]\n          },\n          this.element\n        );\n\n        func.apply(this._window, [params]);\n      } else {\n        this.logger.error(`A trigger tried to call the function '${trigger.content.name}', which doesn't exist.`, this, query, trigger);\n      }\n    } catch (error) {\n      this.logger.error(`A trigger called the function '${trigger.content.name}', which threw an error.`, this, query, trigger);\n    }\n  }\n}\n\nInitialization.registerAutoCreateComponent(Triggers);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Triggers/Triggers.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_Triggers.scss\n// module id = 678\n// module chunks = 59 88"],"sourceRoot":""}